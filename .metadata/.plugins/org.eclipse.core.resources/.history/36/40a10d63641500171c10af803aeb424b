//Crossfire Assignment 3 External Functions C file

#include <stdio.h>
#include <string.h>
#include <stdbool.h>
#include <stdlib.h>

#include "CrossfireA3Head.h"

//Function to get a number from the user within a range and can deal with bad input
void getNumInRange(int minNum, int maxNum)
{
	bool is_valid = false;
	bool is_num = false;
	char input[100];
	int i;


	//Getting Players


		do
		{
			//Get Input
			printf("Enter the number of players(minimum 2, maximum 6):\n");
			fgets(input, sizeof(input), stdin);

			//Check to see if the input is only numbers
				for (i = 0; i < strlen(input); i++)
				{
					if (input[i] < 48 || input[i] > 57)
					{


						//break is used to escape the loop if any of the characters are not numbers
						break;
					}

					is_valid = true;

				}

			if (is_valid == true)
			{

				//Check to see if the number is in the given range

				if (atoi(input) >= minNum && atoi(input) <= maxNum)
				{
					//is  a valid number
					is_num = true;

					//Assign that value to number of players
					Num_Players = atoi(input);
				}

				else if (atoi(input) == 1)
				{
					printf("It's hard to play a game by yourself, get some friends.\n");
				}

				else
				{
					printf("Please enter a valid number.\n");
				}
			}
		} while (is_valid == false || is_num == false);
}

void getPlayerInfo()
{
	int i, j;
	char input[MAX_SIZE_INPUT];
	bool is_valid;
	bool is_num;
	int minNum = 1;
	int maxNum = 4;


	for (i = 0; i < Num_Players; i++)
	{

		do
		{
			is_num = false;
			is_valid = true;
			printf("Enter the player type for Player %d:\n", i+1);
			printf("1 - Elf\n2 - Human\n3 - Ogre\n4 - Wizard\n");
			fgets(input, sizeof(input), stdin);

				for (j = 0; i < strlen(input); j++)
				{
					if (input[j] < 48 || input[j] > 57)
					{
						break;	//Bad input
						is_valid = false;
					}

				}

				//Input is Good
				if (is_valid == true)
				{

					if ((atoi(input) <= maxNum) && (atoi(input) >= minNum))
					{
						is_num = true;
						players[i].Type = atoi(input);
					}
				}
		} while (is_valid == false || is_num == false);


		printf("Player %d type = %d\n", i+1, players[i].Type);

	}
}
